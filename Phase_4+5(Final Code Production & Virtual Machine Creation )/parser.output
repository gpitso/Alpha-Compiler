Terminals unused in grammar

   UNDEFINED


State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | for
    7     | returnstmt
    8     | break SEMICOLON
    9     | continue SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 break: BREAK

   14 continue: CONTINUE

   15 expr: assignexpr
   16     | expr PLUS expr
   17     | expr MINUS expr
   18     | expr MUL expr
   19     | expr DIV expr
   20     | expr MOD expr
   21     | expr GREATER expr
   22     | expr GREATER_OR_EQUAL expr
   23     | expr LESS expr
   24     | expr LESS_OR_EQUAL expr
   25     | expr EQUALS expr
   26     | expr NOT_EQUALS expr
   27     | expr AND expr
   28     | expr OR expr
   29     | term

   30 term: L_PARENTHESIS expr R_PARENTHESIS
   31     | MINUS expr
   32     | NOT expr
   33     | PLUS_PLUS lvalue
   34     | lvalue PLUS_PLUS
   35     | MINUS_MINUS lvalue
   36     | lvalue MINUS_MINUS
   37     | primary

   38 $@1: %empty

   39 assignexpr: lvalue $@1 ASSIGN expr

   40 primary: lvalue
   41        | call
   42        | tabledef
   43        | L_PARENTHESIS funcdef R_PARENTHESIS
   44        | const

   45 lvalue: IDENTIFIER
   46       | LOCAL IDENTIFIER
   47       | SCOPE IDENTIFIER
   48       | member

   49 member: lvalue DOT IDENTIFIER
   50       | lvalue L_BRACKET expr R_BRACKET
   51       | call DOT IDENTIFIER
   52       | call L_BRACKET expr R_BRACKET

   53 call: call L_PARENTHESIS elist R_PARENTHESIS
   54     | lvalue callsuffix
   55     | L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

   56 callsuffix: normcall
   57           | methodcall

   58 methodcall: DOUBLE_DOT IDENTIFIER L_PARENTHESIS elist R_PARENTHESIS

   59 normcall: L_PARENTHESIS elist R_PARENTHESIS

   60 elist: expr
   61      | elist COMMA expr
   62      | %empty

   63 tabledef: L_BRACKET elist R_BRACKET
   64         | L_BRACKET indexed R_BRACKET

   65 indexed: indexedelem
   66        | indexed COMMA indexedelem

   67 indexedelem: L_CURLY_BRACKET expr COLON expr R_CURLY_BRACKET

   68 block_stmt: block_stmt stmt
   69           | %empty

   70 $@2: %empty

   71 block: L_CURLY_BRACKET $@2 block_stmt R_CURLY_BRACKET

   72 idname: IDENTIFIER
   73       | %empty

   74 fblock_s: %empty

   75 fblock_e: %empty

   76 fprefix: FUNCTION idname

   77 $@3: %empty

   78 fargs: L_PARENTHESIS $@3 idlist R_PARENTHESIS

   79 fbody: fblock_s block fblock_e

   80 funcdef: fprefix fargs fbody

   81 const: INT
   82      | FLOAT
   83      | STRING
   84      | NIL
   85      | TRUE
   86      | FALSE

   87 idlist: IDENTIFIER
   88       | idlist COMMA IDENTIFIER
   89       | %empty

   90 ifprefix: IF L_PARENTHESIS expr R_PARENTHESIS

   91 elseprefix: ELSE

   92 ifstmt: ifprefix stmt
   93       | ifprefix stmt elseprefix stmt

   94 loopstart: %empty

   95 loopend: %empty

   96 loopstmt: loopstart stmt loopend

   97 whilecond: L_PARENTHESIS expr R_PARENTHESIS

   98 whilestart: WHILE

   99 whilestmt: whilestart whilecond loopstmt

  100 N: %empty

  101 M: %empty

  102 forprefix: FOR L_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  103 for: forprefix N elist R_PARENTHESIS N stmt N

  104 returnstmt: RETURN expr SEMICOLON
  105           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 81
STRING (259) 83
IDENTIFIER (260) 45 46 47 49 51 58 72 87 88
FLOAT (261) 82
WHILE (262) 98
FOR (263) 102
IF (264) 90
ELSE (265) 91
FUNCTION (266) 76
RETURN (267) 104 105
AND (268) 27
BREAK (269) 13
CONTINUE (270) 14
OR (271) 28
NOT (272) 32
LOCAL (273) 46
TRUE (274) 85
FALSE (275) 86
NIL (276) 84
PLUS (277) 16
MINUS (278) 17 31
ASSIGN (279) 39
MUL (280) 18
MOD (281) 20
DIV (282) 19
EQUALS (283) 25
NOT_EQUALS (284) 26
PLUS_PLUS (285) 33 34
MINUS_MINUS (286) 35 36
GREATER_OR_EQUAL (287) 22
LESS_OR_EQUAL (288) 24
GREATER (289) 21
LESS (290) 23
L_BRACKET (291) 50 52 63 64
R_BRACKET (292) 50 52 63 64
L_CURLY_BRACKET (293) 67 71
R_CURLY_BRACKET (294) 67 71
L_PARENTHESIS (295) 30 43 53 55 58 59 78 90 97 102
R_PARENTHESIS (296) 30 43 53 55 58 59 78 90 97 103
COMMA (297) 61 66 88
SEMICOLON (298) 3 8 9 12 102 104 105
COLON (299) 67
SCOPE (300) 47
DOT (301) 49 51
DOUBLE_DOT (302) 58
UNDEFINED (303)
UMINUS (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2, on right: 0 1
stmt (52)
    on left: 3 4 5 6 7 8 9 10 11 12, on right: 1 68 92 93 96 103
break (53)
    on left: 13, on right: 8
continue (54)
    on left: 14, on right: 9
expr (55)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    3 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 39 50 52 60 61
    67 90 97 102 104
term (56)
    on left: 30 31 32 33 34 35 36 37, on right: 29
assignexpr (57)
    on left: 39, on right: 15
$@1 (58)
    on left: 38, on right: 39
primary (59)
    on left: 40 41 42 43 44, on right: 37
lvalue (60)
    on left: 45 46 47 48, on right: 33 34 35 36 39 40 49 50 54
member (61)
    on left: 49 50 51 52, on right: 48
call (62)
    on left: 53 54 55, on right: 41 51 52 53
callsuffix (63)
    on left: 56 57, on right: 54
methodcall (64)
    on left: 58, on right: 57
normcall (65)
    on left: 59, on right: 56
elist (66)
    on left: 60 61 62, on right: 53 55 58 59 61 63 102 103
tabledef (67)
    on left: 63 64, on right: 42
indexed (68)
    on left: 65 66, on right: 64 66
indexedelem (69)
    on left: 67, on right: 65 66
block_stmt (70)
    on left: 68 69, on right: 68 71
block (71)
    on left: 71, on right: 10 79
$@2 (72)
    on left: 70, on right: 71
idname (73)
    on left: 72 73, on right: 76
fblock_s (74)
    on left: 74, on right: 79
fblock_e (75)
    on left: 75, on right: 79
fprefix (76)
    on left: 76, on right: 80
fargs (77)
    on left: 78, on right: 80
$@3 (78)
    on left: 77, on right: 78
fbody (79)
    on left: 79, on right: 80
funcdef (80)
    on left: 80, on right: 11 43 55
const (81)
    on left: 81 82 83 84 85 86, on right: 44
idlist (82)
    on left: 87 88 89, on right: 78 88
ifprefix (83)
    on left: 90, on right: 92 93
elseprefix (84)
    on left: 91, on right: 93
ifstmt (85)
    on left: 92 93, on right: 4
loopstart (86)
    on left: 94, on right: 96
loopend (87)
    on left: 95, on right: 96
loopstmt (88)
    on left: 96, on right: 99
whilecond (89)
    on left: 97, on right: 99
whilestart (90)
    on left: 98, on right: 99
whilestmt (91)
    on left: 99, on right: 5
N (92)
    on left: 100, on right: 103
M (93)
    on left: 101, on right: 102
forprefix (94)
    on left: 102, on right: 103
for (95)
    on left: 103, on right: 6
returnstmt (96)
    on left: 104 105, on right: 7


State 0

    0 $accept: . program $end

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    WHILE            shift, and go to state 5
    FOR              shift, and go to state 6
    IF               shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 21
    L_PARENTHESIS    shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    SCOPE            shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    break       go to state 27
    continue    go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    block       go to state 37
    fprefix     go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    for         go to state 46
    returnstmt  go to state 47


State 1

   81 const: INT .

    $default  reduce using rule 81 (const)


State 2

   83 const: STRING .

    $default  reduce using rule 83 (const)


State 3

   45 lvalue: IDENTIFIER .

    $default  reduce using rule 45 (lvalue)


State 4

   82 const: FLOAT .

    $default  reduce using rule 82 (const)


State 5

   98 whilestart: WHILE .

    $default  reduce using rule 98 (whilestart)


State 6

  102 forprefix: FOR . L_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    L_PARENTHESIS  shift, and go to state 48


State 7

   90 ifprefix: IF . L_PARENTHESIS expr R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 49


State 8

   76 fprefix: FUNCTION . idname

    IDENTIFIER  shift, and go to state 50

    $default  reduce using rule 73 (idname)

    idname  go to state 51


State 9

  104 returnstmt: RETURN . expr SEMICOLON
  105           | RETURN . SEMICOLON

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SEMICOLON      shift, and go to state 52
    SCOPE          shift, and go to state 24

    expr        go to state 53
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 10

   13 break: BREAK .

    $default  reduce using rule 13 (break)


State 11

   14 continue: CONTINUE .

    $default  reduce using rule 14 (continue)


State 12

   32 term: NOT . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 54
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 13

   46 lvalue: LOCAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 55


State 14

   85 const: TRUE .

    $default  reduce using rule 85 (const)


State 15

   86 const: FALSE .

    $default  reduce using rule 86 (const)


State 16

   84 const: NIL .

    $default  reduce using rule 84 (const)


State 17

   31 term: MINUS . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 56
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 18

   33 term: PLUS_PLUS . lvalue

    IDENTIFIER     shift, and go to state 3
    LOCAL          shift, and go to state 13
    L_PARENTHESIS  shift, and go to state 57
    SCOPE          shift, and go to state 24

    lvalue  go to state 58
    member  go to state 34
    call    go to state 59


State 19

   35 term: MINUS_MINUS . lvalue

    IDENTIFIER     shift, and go to state 3
    LOCAL          shift, and go to state 13
    L_PARENTHESIS  shift, and go to state 57
    SCOPE          shift, and go to state 24

    lvalue  go to state 60
    member  go to state 34
    call    go to state 59


State 20

   63 tabledef: L_BRACKET . elist R_BRACKET
   64         | L_BRACKET . indexed R_BRACKET

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 61
    L_PARENTHESIS    shift, and go to state 22
    SCOPE            shift, and go to state 24

    $default  reduce using rule 62 (elist)

    expr         go to state 62
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 63
    tabledef     go to state 36
    indexed      go to state 64
    indexedelem  go to state 65
    const        go to state 40


State 21

   71 block: L_CURLY_BRACKET . $@2 block_stmt R_CURLY_BRACKET

    $default  reduce using rule 70 ($@2)

    $@2  go to state 66


State 22

   30 term: L_PARENTHESIS . expr R_PARENTHESIS
   43 primary: L_PARENTHESIS . funcdef R_PARENTHESIS
   55 call: L_PARENTHESIS . funcdef R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    FUNCTION       shift, and go to state 8
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 67
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    fprefix     go to state 38
    funcdef     go to state 68
    const       go to state 40


State 23

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 24

   47 lvalue: SCOPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 69


State 25

    0 $accept: program . $end

    $end  shift, and go to state 70


State 26

    1 program: stmt . program

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    WHILE            shift, and go to state 5
    FOR              shift, and go to state 6
    IF               shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 21
    L_PARENTHESIS    shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    SCOPE            shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 71
    stmt        go to state 26
    break       go to state 27
    continue    go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    block       go to state 37
    fprefix     go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    for         go to state 46
    returnstmt  go to state 47


State 27

    8 stmt: break . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 28

    9 stmt: continue . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 29

    3 stmt: expr . SEMICOLON
   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    SEMICOLON         shift, and go to state 87


State 30

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 31

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 32

   37 term: primary .

    $default  reduce using rule 37 (term)


State 33

   34 term: lvalue . PLUS_PLUS
   36     | lvalue . MINUS_MINUS
   39 assignexpr: lvalue . $@1 ASSIGN expr
   40 primary: lvalue .
   49 member: lvalue . DOT IDENTIFIER
   50       | lvalue . L_BRACKET expr R_BRACKET
   54 call: lvalue . callsuffix

    PLUS_PLUS      shift, and go to state 88
    MINUS_MINUS    shift, and go to state 89
    L_BRACKET      shift, and go to state 90
    L_PARENTHESIS  shift, and go to state 91
    DOT            shift, and go to state 92
    DOUBLE_DOT     shift, and go to state 93

    ASSIGN    reduce using rule 38 ($@1)
    $default  reduce using rule 40 (primary)

    $@1         go to state 94
    callsuffix  go to state 95
    methodcall  go to state 96
    normcall    go to state 97


State 34

   48 lvalue: member .

    $default  reduce using rule 48 (lvalue)


State 35

   41 primary: call .
   51 member: call . DOT IDENTIFIER
   52       | call . L_BRACKET expr R_BRACKET
   53 call: call . L_PARENTHESIS elist R_PARENTHESIS

    L_BRACKET      shift, and go to state 98
    L_PARENTHESIS  shift, and go to state 99
    DOT            shift, and go to state 100

    $default  reduce using rule 41 (primary)


State 36

   42 primary: tabledef .

    $default  reduce using rule 42 (primary)


State 37

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 38

   80 funcdef: fprefix . fargs fbody

    L_PARENTHESIS  shift, and go to state 101

    fargs  go to state 102


State 39

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 40

   44 primary: const .

    $default  reduce using rule 44 (primary)


State 41

   92 ifstmt: ifprefix . stmt
   93       | ifprefix . stmt elseprefix stmt

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    WHILE            shift, and go to state 5
    FOR              shift, and go to state 6
    IF               shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 21
    L_PARENTHESIS    shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    SCOPE            shift, and go to state 24

    stmt        go to state 103
    break       go to state 27
    continue    go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    block       go to state 37
    fprefix     go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    for         go to state 46
    returnstmt  go to state 47


State 42

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 43

   99 whilestmt: whilestart . whilecond loopstmt

    L_PARENTHESIS  shift, and go to state 104

    whilecond  go to state 105


State 44

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 45

  103 for: forprefix . N elist R_PARENTHESIS N stmt N

    $default  reduce using rule 100 (N)

    N  go to state 106


State 46

    6 stmt: for .

    $default  reduce using rule 6 (stmt)


State 47

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 48

  102 forprefix: FOR L_PARENTHESIS . elist SEMICOLON M expr SEMICOLON

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    $default  reduce using rule 62 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 107
    tabledef    go to state 36
    const       go to state 40


State 49

   90 ifprefix: IF L_PARENTHESIS . expr R_PARENTHESIS

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 108
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 50

   72 idname: IDENTIFIER .

    $default  reduce using rule 72 (idname)


State 51

   76 fprefix: FUNCTION idname .

    $default  reduce using rule 76 (fprefix)


State 52

  105 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 105 (returnstmt)


State 53

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
  104 returnstmt: RETURN expr . SEMICOLON

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    SEMICOLON         shift, and go to state 109


State 54

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   32 term: NOT expr .

    $default  reduce using rule 32 (term)


State 55

   46 lvalue: LOCAL IDENTIFIER .

    $default  reduce using rule 46 (lvalue)


State 56

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   31 term: MINUS expr .

    $default  reduce using rule 31 (term)


State 57

   55 call: L_PARENTHESIS . funcdef R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    FUNCTION  shift, and go to state 8

    fprefix  go to state 38
    funcdef  go to state 110


State 58

   33 term: PLUS_PLUS lvalue .
   49 member: lvalue . DOT IDENTIFIER
   50       | lvalue . L_BRACKET expr R_BRACKET
   54 call: lvalue . callsuffix

    L_BRACKET      shift, and go to state 90
    L_PARENTHESIS  shift, and go to state 91
    DOT            shift, and go to state 92
    DOUBLE_DOT     shift, and go to state 93

    $default  reduce using rule 33 (term)

    callsuffix  go to state 95
    methodcall  go to state 96
    normcall    go to state 97


State 59

   51 member: call . DOT IDENTIFIER
   52       | call . L_BRACKET expr R_BRACKET
   53 call: call . L_PARENTHESIS elist R_PARENTHESIS

    L_BRACKET      shift, and go to state 98
    L_PARENTHESIS  shift, and go to state 99
    DOT            shift, and go to state 100


State 60

   35 term: MINUS_MINUS lvalue .
   49 member: lvalue . DOT IDENTIFIER
   50       | lvalue . L_BRACKET expr R_BRACKET
   54 call: lvalue . callsuffix

    L_BRACKET      shift, and go to state 90
    L_PARENTHESIS  shift, and go to state 91
    DOT            shift, and go to state 92
    DOUBLE_DOT     shift, and go to state 93

    $default  reduce using rule 35 (term)

    callsuffix  go to state 95
    methodcall  go to state 96
    normcall    go to state 97


State 61

   67 indexedelem: L_CURLY_BRACKET . expr COLON expr R_CURLY_BRACKET

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 111
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 62

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   60 elist: expr .

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86

    $default  reduce using rule 60 (elist)


State 63

   61 elist: elist . COMMA expr
   63 tabledef: L_BRACKET elist . R_BRACKET

    R_BRACKET  shift, and go to state 112
    COMMA      shift, and go to state 113


State 64

   64 tabledef: L_BRACKET indexed . R_BRACKET
   66 indexed: indexed . COMMA indexedelem

    R_BRACKET  shift, and go to state 114
    COMMA      shift, and go to state 115


State 65

   65 indexed: indexedelem .

    $default  reduce using rule 65 (indexed)


State 66

   71 block: L_CURLY_BRACKET $@2 . block_stmt R_CURLY_BRACKET

    $default  reduce using rule 69 (block_stmt)

    block_stmt  go to state 116


State 67

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   30 term: L_PARENTHESIS expr . R_PARENTHESIS

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    R_PARENTHESIS     shift, and go to state 117


State 68

   43 primary: L_PARENTHESIS funcdef . R_PARENTHESIS
   55 call: L_PARENTHESIS funcdef . R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 118


State 69

   47 lvalue: SCOPE IDENTIFIER .

    $default  reduce using rule 47 (lvalue)


State 70

    0 $accept: program $end .

    $default  accept


State 71

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 72

    8 stmt: break SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 73

    9 stmt: continue SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 74

   27 expr: expr AND . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 119
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 75

   28 expr: expr OR . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 120
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 76

   16 expr: expr PLUS . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 121
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 77

   17 expr: expr MINUS . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 122
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 78

   18 expr: expr MUL . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 123
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 79

   20 expr: expr MOD . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 124
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 80

   19 expr: expr DIV . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 125
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 81

   25 expr: expr EQUALS . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 82

   26 expr: expr NOT_EQUALS . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 127
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 83

   22 expr: expr GREATER_OR_EQUAL . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 128
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 84

   24 expr: expr LESS_OR_EQUAL . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 129
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 85

   21 expr: expr GREATER . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 130
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 86

   23 expr: expr LESS . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 131
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 87

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 88

   34 term: lvalue PLUS_PLUS .

    $default  reduce using rule 34 (term)


State 89

   36 term: lvalue MINUS_MINUS .

    $default  reduce using rule 36 (term)


State 90

   50 member: lvalue L_BRACKET . expr R_BRACKET

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 132
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 91

   59 normcall: L_PARENTHESIS . elist R_PARENTHESIS

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    $default  reduce using rule 62 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 133
    tabledef    go to state 36
    const       go to state 40


State 92

   49 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 134


State 93

   58 methodcall: DOUBLE_DOT . IDENTIFIER L_PARENTHESIS elist R_PARENTHESIS

    IDENTIFIER  shift, and go to state 135


State 94

   39 assignexpr: lvalue $@1 . ASSIGN expr

    ASSIGN  shift, and go to state 136


State 95

   54 call: lvalue callsuffix .

    $default  reduce using rule 54 (call)


State 96

   57 callsuffix: methodcall .

    $default  reduce using rule 57 (callsuffix)


State 97

   56 callsuffix: normcall .

    $default  reduce using rule 56 (callsuffix)


State 98

   52 member: call L_BRACKET . expr R_BRACKET

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 137
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 99

   53 call: call L_PARENTHESIS . elist R_PARENTHESIS

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    $default  reduce using rule 62 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 138
    tabledef    go to state 36
    const       go to state 40


State 100

   51 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 139


State 101

   78 fargs: L_PARENTHESIS . $@3 idlist R_PARENTHESIS

    $default  reduce using rule 77 ($@3)

    $@3  go to state 140


State 102

   80 funcdef: fprefix fargs . fbody

    $default  reduce using rule 74 (fblock_s)

    fblock_s  go to state 141
    fbody     go to state 142


State 103

   92 ifstmt: ifprefix stmt .
   93       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 143

    ELSE      [reduce using rule 92 (ifstmt)]
    $default  reduce using rule 92 (ifstmt)

    elseprefix  go to state 144


State 104

   97 whilecond: L_PARENTHESIS . expr R_PARENTHESIS

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 145
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 105

   99 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 94 (loopstart)

    loopstart  go to state 146
    loopstmt   go to state 147


State 106

  103 for: forprefix N . elist R_PARENTHESIS N stmt N

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    $default  reduce using rule 62 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 148
    tabledef    go to state 36
    const       go to state 40


State 107

   61 elist: elist . COMMA expr
  102 forprefix: FOR L_PARENTHESIS elist . SEMICOLON M expr SEMICOLON

    COMMA      shift, and go to state 113
    SEMICOLON  shift, and go to state 149


State 108

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   90 ifprefix: IF L_PARENTHESIS expr . R_PARENTHESIS

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    R_PARENTHESIS     shift, and go to state 150


State 109

  104 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 104 (returnstmt)


State 110

   55 call: L_PARENTHESIS funcdef . R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 151


State 111

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   67 indexedelem: L_CURLY_BRACKET expr . COLON expr R_CURLY_BRACKET

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    COLON             shift, and go to state 152


State 112

   63 tabledef: L_BRACKET elist R_BRACKET .

    $default  reduce using rule 63 (tabledef)


State 113

   61 elist: elist COMMA . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 153
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 114

   64 tabledef: L_BRACKET indexed R_BRACKET .

    $default  reduce using rule 64 (tabledef)


State 115

   66 indexed: indexed COMMA . indexedelem

    L_CURLY_BRACKET  shift, and go to state 61

    indexedelem  go to state 154


State 116

   68 block_stmt: block_stmt . stmt
   71 block: L_CURLY_BRACKET $@2 block_stmt . R_CURLY_BRACKET

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    WHILE            shift, and go to state 5
    FOR              shift, and go to state 6
    IF               shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 21
    R_CURLY_BRACKET  shift, and go to state 155
    L_PARENTHESIS    shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    SCOPE            shift, and go to state 24

    stmt        go to state 156
    break       go to state 27
    continue    go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    block       go to state 37
    fprefix     go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    for         go to state 46
    returnstmt  go to state 47


State 117

   30 term: L_PARENTHESIS expr R_PARENTHESIS .

    $default  reduce using rule 30 (term)


State 118

   43 primary: L_PARENTHESIS funcdef R_PARENTHESIS .
   55 call: L_PARENTHESIS funcdef R_PARENTHESIS . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 157

    $default  reduce using rule 43 (primary)


State 119

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   27     | expr AND expr .
   28     | expr . OR expr

    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86

    $default  reduce using rule 27 (expr)


State 120

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   28     | expr OR expr .

    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86

    $default  reduce using rule 28 (expr)


State 121

   16 expr: expr . PLUS expr
   16     | expr PLUS expr .
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    MUL  shift, and go to state 78
    MOD  shift, and go to state 79
    DIV  shift, and go to state 80

    $default  reduce using rule 16 (expr)


State 122

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   17     | expr MINUS expr .
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    MUL  shift, and go to state 78
    MOD  shift, and go to state 79
    DIV  shift, and go to state 80

    $default  reduce using rule 17 (expr)


State 123

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   18     | expr MUL expr .
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 124

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   20     | expr MOD expr .
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 125

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   19     | expr DIV expr .
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 126

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   25     | expr EQUALS expr .
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86

    EQUALS      error (nonassociative)
    NOT_EQUALS  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 127

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   26     | expr NOT_EQUALS expr .
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86

    EQUALS      error (nonassociative)
    NOT_EQUALS  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 128

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   22     | expr GREATER_OR_EQUAL expr .
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    MUL    shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 22 (expr)


State 129

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   24     | expr LESS_OR_EQUAL expr .
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    MUL    shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 24 (expr)


State 130

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   21     | expr GREATER expr .
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    MUL    shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 21 (expr)


State 131

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   23     | expr LESS expr .
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    MUL    shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 23 (expr)


State 132

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   50 member: lvalue L_BRACKET expr . R_BRACKET

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    R_BRACKET         shift, and go to state 158


State 133

   59 normcall: L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA expr

    R_PARENTHESIS  shift, and go to state 159
    COMMA          shift, and go to state 113


State 134

   49 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 49 (member)


State 135

   58 methodcall: DOUBLE_DOT IDENTIFIER . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 160


State 136

   39 assignexpr: lvalue $@1 ASSIGN . expr

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 161
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 137

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   52 member: call L_BRACKET expr . R_BRACKET

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    R_BRACKET         shift, and go to state 162


State 138

   53 call: call L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA expr

    R_PARENTHESIS  shift, and go to state 163
    COMMA          shift, and go to state 113


State 139

   51 member: call DOT IDENTIFIER .

    $default  reduce using rule 51 (member)


State 140

   78 fargs: L_PARENTHESIS $@3 . idlist R_PARENTHESIS

    IDENTIFIER  shift, and go to state 164

    $default  reduce using rule 89 (idlist)

    idlist  go to state 165


State 141

   79 fbody: fblock_s . block fblock_e

    L_CURLY_BRACKET  shift, and go to state 21

    block  go to state 166


State 142

   80 funcdef: fprefix fargs fbody .

    $default  reduce using rule 80 (funcdef)


State 143

   91 elseprefix: ELSE .

    $default  reduce using rule 91 (elseprefix)


State 144

   93 ifstmt: ifprefix stmt elseprefix . stmt

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    WHILE            shift, and go to state 5
    FOR              shift, and go to state 6
    IF               shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 21
    L_PARENTHESIS    shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    SCOPE            shift, and go to state 24

    stmt        go to state 167
    break       go to state 27
    continue    go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    block       go to state 37
    fprefix     go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    for         go to state 46
    returnstmt  go to state 47


State 145

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   97 whilecond: L_PARENTHESIS expr . R_PARENTHESIS

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    R_PARENTHESIS     shift, and go to state 168


State 146

   96 loopstmt: loopstart . stmt loopend

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    WHILE            shift, and go to state 5
    FOR              shift, and go to state 6
    IF               shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 21
    L_PARENTHESIS    shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    SCOPE            shift, and go to state 24

    stmt        go to state 169
    break       go to state 27
    continue    go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    block       go to state 37
    fprefix     go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    for         go to state 46
    returnstmt  go to state 47


State 147

   99 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 99 (whilestmt)


State 148

   61 elist: elist . COMMA expr
  103 for: forprefix N elist . R_PARENTHESIS N stmt N

    R_PARENTHESIS  shift, and go to state 170
    COMMA          shift, and go to state 113


State 149

  102 forprefix: FOR L_PARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 101 (M)

    M  go to state 171


State 150

   90 ifprefix: IF L_PARENTHESIS expr R_PARENTHESIS .

    $default  reduce using rule 90 (ifprefix)


State 151

   55 call: L_PARENTHESIS funcdef R_PARENTHESIS . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 157


State 152

   67 indexedelem: L_CURLY_BRACKET expr COLON . expr R_CURLY_BRACKET

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 172
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 153

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   61 elist: elist COMMA expr .

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86

    $default  reduce using rule 61 (elist)


State 154

   66 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 66 (indexed)


State 155

   71 block: L_CURLY_BRACKET $@2 block_stmt R_CURLY_BRACKET .

    $default  reduce using rule 71 (block)


State 156

   68 block_stmt: block_stmt stmt .

    $default  reduce using rule 68 (block_stmt)


State 157

   55 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS . elist R_PARENTHESIS

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    $default  reduce using rule 62 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 173
    tabledef    go to state 36
    const       go to state 40


State 158

   50 member: lvalue L_BRACKET expr R_BRACKET .

    $default  reduce using rule 50 (member)


State 159

   59 normcall: L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 59 (normcall)


State 160

   58 methodcall: DOUBLE_DOT IDENTIFIER L_PARENTHESIS . elist R_PARENTHESIS

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    $default  reduce using rule 62 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 174
    tabledef    go to state 36
    const       go to state 40


State 161

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   39 assignexpr: lvalue $@1 ASSIGN expr .

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86

    $default  reduce using rule 39 (assignexpr)


State 162

   52 member: call L_BRACKET expr R_BRACKET .

    $default  reduce using rule 52 (member)


State 163

   53 call: call L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 53 (call)


State 164

   87 idlist: IDENTIFIER .

    $default  reduce using rule 87 (idlist)


State 165

   78 fargs: L_PARENTHESIS $@3 idlist . R_PARENTHESIS
   88 idlist: idlist . COMMA IDENTIFIER

    R_PARENTHESIS  shift, and go to state 175
    COMMA          shift, and go to state 176


State 166

   79 fbody: fblock_s block . fblock_e

    $default  reduce using rule 75 (fblock_e)

    fblock_e  go to state 177


State 167

   93 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 93 (ifstmt)


State 168

   97 whilecond: L_PARENTHESIS expr R_PARENTHESIS .

    $default  reduce using rule 97 (whilecond)


State 169

   96 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 95 (loopend)

    loopend  go to state 178


State 170

  103 for: forprefix N elist R_PARENTHESIS . N stmt N

    $default  reduce using rule 100 (N)

    N  go to state 179


State 171

  102 forprefix: FOR L_PARENTHESIS elist SEMICOLON M . expr SEMICOLON

    INT            shift, and go to state 1
    STRING         shift, and go to state 2
    IDENTIFIER     shift, and go to state 3
    FLOAT          shift, and go to state 4
    NOT            shift, and go to state 12
    LOCAL          shift, and go to state 13
    TRUE           shift, and go to state 14
    FALSE          shift, and go to state 15
    NIL            shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    L_BRACKET      shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    SCOPE          shift, and go to state 24

    expr        go to state 180
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    const       go to state 40


State 172

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
   67 indexedelem: L_CURLY_BRACKET expr COLON expr . R_CURLY_BRACKET

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    R_CURLY_BRACKET   shift, and go to state 181


State 173

   55 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA expr

    R_PARENTHESIS  shift, and go to state 182
    COMMA          shift, and go to state 113


State 174

   58 methodcall: DOUBLE_DOT IDENTIFIER L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA expr

    R_PARENTHESIS  shift, and go to state 183
    COMMA          shift, and go to state 113


State 175

   78 fargs: L_PARENTHESIS $@3 idlist R_PARENTHESIS .

    $default  reduce using rule 78 (fargs)


State 176

   88 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 184


State 177

   79 fbody: fblock_s block fblock_e .

    $default  reduce using rule 79 (fbody)


State 178

   96 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 96 (loopstmt)


State 179

  103 for: forprefix N elist R_PARENTHESIS N . stmt N

    INT              shift, and go to state 1
    STRING           shift, and go to state 2
    IDENTIFIER       shift, and go to state 3
    FLOAT            shift, and go to state 4
    WHILE            shift, and go to state 5
    FOR              shift, and go to state 6
    IF               shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUS_PLUS        shift, and go to state 18
    MINUS_MINUS      shift, and go to state 19
    L_BRACKET        shift, and go to state 20
    L_CURLY_BRACKET  shift, and go to state 21
    L_PARENTHESIS    shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    SCOPE            shift, and go to state 24

    stmt        go to state 185
    break       go to state 27
    continue    go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    tabledef    go to state 36
    block       go to state 37
    fprefix     go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    for         go to state 46
    returnstmt  go to state 47


State 180

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . GREATER expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_OR_EQUAL expr
   25     | expr . EQUALS expr
   26     | expr . NOT_EQUALS expr
   27     | expr . AND expr
   28     | expr . OR expr
  102 forprefix: FOR L_PARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND               shift, and go to state 74
    OR                shift, and go to state 75
    PLUS              shift, and go to state 76
    MINUS             shift, and go to state 77
    MUL               shift, and go to state 78
    MOD               shift, and go to state 79
    DIV               shift, and go to state 80
    EQUALS            shift, and go to state 81
    NOT_EQUALS        shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    GREATER           shift, and go to state 85
    LESS              shift, and go to state 86
    SEMICOLON         shift, and go to state 186


State 181

   67 indexedelem: L_CURLY_BRACKET expr COLON expr R_CURLY_BRACKET .

    $default  reduce using rule 67 (indexedelem)


State 182

   55 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 55 (call)


State 183

   58 methodcall: DOUBLE_DOT IDENTIFIER L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 58 (methodcall)


State 184

   88 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 88 (idlist)


State 185

  103 for: forprefix N elist R_PARENTHESIS N stmt . N

    $default  reduce using rule 100 (N)

    N  go to state 187


State 186

  102 forprefix: FOR L_PARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 102 (forprefix)


State 187

  103 for: forprefix N elist R_PARENTHESIS N stmt N .

    $default  reduce using rule 103 (for)
